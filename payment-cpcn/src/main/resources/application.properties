server.port=20001
spring.application.name=payment-cpcn
eureka.client.service-url.defaultZone=http://127.0.0.1:9999/eureka




#cpcn communicate config
cpcn.domain = http://test.cpcn.com.cn/Gateway/
cpcn.async.interface = InterfaceI
cpcn.sync.interface = InterfaceII

#cpcn business config
cpcn.merid = 002964

# feign config


#jdbc config
spring.datasource.druid.url= jdbc:postgresql://localhost:5432/sp_database?currentSchema=payment
spring.datasource.druid.username= sp
spring.datasource.druid.password= sp
spring.datasource.druid.driver-class-name= org.postgresql.Driver

#���ӳ�����
spring.datasource.druid.initial-size= 5
spring.datasource.druid.max-active= 5
spring.datasource.druid.min-idle= 5
spring.datasource.druid.max-wait= 30
spring.datasource.druid.validation-query= select 'X' 
spring.datasource.druid.validation-query-timeout= 30
spring.datasource.druid.test-on-borrow= true
spring.datasource.druid.test-on-return= true
spring.datasource.druid.test-while-idle= true
spring.datasource.druid.filters= StatFilter,WalFilter

# ����StatFilter
spring.datasource.druid.filter.stat.db-type=h2
spring.datasource.druid.filter.stat.log-slow-sql=true
spring.datasource.druid.filter.stat.slow-sql-millis=2000

# ����WallFilter
spring.datasource.druid.filter.wall.enabled=true
spring.datasource.druid.filter.wall.db-type=h2
spring.datasource.druid.filter.wall.config.delete-allow=false
spring.datasource.druid.filter.wall.config.drop-table-allow=false

# Spring������ã�˵����ο�Druid Github Wiki������_Druid��Spring�����������
spring.datasource.druid.aop-patterns= me.itaot
# Spring���AOP����㣬��x.y.z.service.*,���ö��Ӣ�Ķ��ŷָ�

#���org.postgresql.jdbc.PgConnection.createClob() ������δ��ʵ����
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false

logging.level.me.itaot.payment=debug
logging.level.me.itaot.payment.pack=debug
logging.level.root=info


spring.dubbo.appname=payment-cpcn
spring.dubbo.port=20080
spring.dubbo.protocol=dubbo
spring.dubbo.registry=zookeeper://localhost:2181?z

<dubbo:registry address="" client="curator"/>

<!-- 用dubbo协议在20880端口暴露服务 -->
<dubbo:protocol name="dubbo" port="20880"/>